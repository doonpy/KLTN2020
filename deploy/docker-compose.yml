version: '3'
services:
  api-server:
    image: doonpy/kltn2020:latest
    container_name: pk2020-api_server
    entrypoint:
      - /bin/sh
      - tools/docker/api/command.sh
    restart: unless-stopped
    working_dir: /usr/src/app
    env_file: config/api-server.config.env
    tty: true
    ports:
      - 3000:3000
    depends_on:
      - database
    networks:
      - app-network

  background-job:
    image: doonpy/kltn2020:latest
    container_name: pk2020-background_job
    entrypoint:
      - /bin/sh
      - tools/docker/background-job/command.sh
    restart: unless-stopped
    working_dir: /usr/src/app
    env_file: config/background-job.config.env
    tty: true
    depends_on:
      - database
    networks:
      - app-network

  web-server:
    image: doonpy/kltn2020:latest
    container_name: pk2020-web_server
    entrypoint:
      - /bin/sh
      - tools/docker/web/command.sh
    restart: unless-stopped
    working_dir: /usr/src/app
    env_file: config/web-server.config.env
    tty: true
    depends_on:
      - api-server
    ports:
      - 3001:3001
    networks:
      - app-network

  database:
    image: mongo:4.2
    container_name: pk2020_db
    env_file: config/database.config.env
    volumes:
      - ./data/mongo-volume:/data/db # mongodb volume
    ports:
      - '27017-27019:27017-27019'
    tty: true
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:1.19.0
    container_name: pk2020_nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/cerbot
#    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - web-server
    ports:
      - 80:80
      - 443:443
    networks:
      - app-network

#  certbot:
#    image: certbot/certbot
#    container_name: pk2020_certbot
#    volumes:
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot
#    depends_on:
#      - nginx
#    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
#    networks:
#      - app-network

networks:
  app-network:
    driver: bridge