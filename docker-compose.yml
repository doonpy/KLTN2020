version: '3'
services:
  node-server:
    build:
      context: .
      dockerfile: ./tools/docker/node-server/Dockerfile
    container_name: node-server
    entrypoint:
      - /bin/sh
      - ./command.sh
    restart: unless-stopped
    working_dir: /usr/src/app
    environment:
      - NODE_ENV=production
      - SERVER_PORT=3000
      - SERVER_PROTOCOL=http://
      - SERVER_URI=pk2020.tk
    tty: true
    volumes:
      - ./public:/usr/src/app/public
    ports:
      - 80:3000

  bgr-job:
    image: kltn2020_node-server:latest
    container_name: bgr-job
    entrypoint:
      - /bin/sh
      - ./bgr-job-command.sh
    restart: unless-stopped
    working_dir: /usr/src/app
    environment:
      - NODE_ENV=production
      - SERVER_PROTOCOL=http://
      - SERVER_URI=pk2020.tk
      - SERVER_PORT=6789
      - SERVER_PORT_WEB=80
    depends_on:
      - node-server
    tty: true
    volumes:
      - ./public:/usr/src/app/public
    ports:
      - 6789:6789

  monitor-server:
    build:
      context: .
      dockerfile: ./tools/docker/monitor-server/Dockerfile
    container_name: monitor-server
    restart: unless-stopped
    working_dir: /usr/src/app
    environment:
      - NODE_ENV=production
    tty: true
    ports:
      - 5000:80

#  mongo-db:
#    image: mongo
#    container_name: mongo-db
#    restart: unless-stopped
#    tty: true
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=alice
#      - MONGO_INITDB_ROOT_PASSWORD=alice
#    ports:
#      - 27017-27019:27017-27019
#    volumes:
#      - ./mongo-data:/data/db